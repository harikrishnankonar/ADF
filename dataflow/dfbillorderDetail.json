{
	"name": "dfbillorderDetail",
	"properties": {
		"folder": {
			"name": "POS Transaction"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dsposdata",
						"type": "DatasetReference"
					},
					"name": "dsbillorderdetail"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimBillOrderDetail_Dest",
						"type": "DatasetReference"
					},
					"name": "DimBillOrderDetail"
				}
			],
			"transformations": [
				{
					"name": "arbillorderdetail"
				}
			],
			"script": "source(output(\n\t\tGroupId as string,\n\t\tClientId as string,\n\t\tPOSCode as string,\n\t\tPropertyCode as integer,\n\t\tRegionCode as integer,\n\t\tBrandCode as integer,\n\t\tCountryCode as integer,\n\t\tBillOrder as string,\n\t\tBillNo as string,\n\t\tBillDateTime as timestamp,\n\t\tSerialNo as integer,\n\t\tMenuItemCode as string,\n\t\tTDHCode as string,\n\t\tTDHNo as integer,\n\t\tTDHSerialNo as integer,\n\t\tIncomeHeadCode as integer,\n\t\tQuantity as decimal(38,8),\n\t\tCostCenterCode as integer,\n\t\tMenuHeadCode as integer,\n\t\tMenuGroupCode as integer,\n\t\tMenuSubGroupCode as integer,\n\t\tCourseCode as integer,\n\t\tFreeQuantity as decimal(38,8),\n\t\tRate as decimal(38,8),\n\t\tOriginalRate as decimal(38,8),\n\t\tBackwardRate as decimal(38,8),\n\t\tCost as decimal(38,8),\n\t\tDiscount as decimal(38,8),\n\t\tDiscountType as string,\n\t\tModifierRate as decimal(38,8),\n\t\tCalcDiscount as decimal(38,8),\n\t\tDiscountAfterPromotion as decimal(38,8),\n\t\tNetAmount as decimal(38,8),\n\t\tTaxOnCost as boolean,\n\t\tHappyHour as boolean,\n\t\tRateCode as integer,\n\t\tSpecialRateCode as integer,\n\t\tItemTotalTax as decimal(38,10),\n\t\tVoidReasonCode as integer,\n\t\tVoidType as string,\n\t\tCategoryCode as string,\n\t\tPayCompliment as integer,\n\t\tReservationNo as string,\n\t\tDiscCardCode as integer,\n\t\tDiscCardDetailsCode as integer,\n\t\tPriceCategoryCode as string,\n\t\tFlavorSizeCode as string,\n\t\tkioskcode as integer,\n\t\tShiftCode as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'Select \\n\\'002\\' as GroupId ,\\n\\'000\\' as ClientId , \\nIsNull(t1.POSCode,\\'\\') as POSCode,\\nIsNull(t1.PropertyCode,0) as PropertyCode,\\nIsNull(t1.RegionCode,0) as RegionCode,\\nIsNull(t1.BrandCode,0) as BrandCode,\\nIsNull(t1.CountryCode,0) as CountryCode,\\nIsNull(t1.BillOrder,\\'\\') as BillOrder,\\nIsNull(t1.BillNo,\\'\\') as BillNo,\\nIsNull(t2.SettleDate,\\'\\') as BillDateTime,\\nIsNull(t1.SerialNo,0) as SerialNo,\\nIsNull(t1.MenuItemCode,\\'\\') as MenuItemCode,\\nIsNull(t1.TDHCode,\\'\\') as TDHCode,\\nIsNull(t1.TDHNo,0) as TDHNo,\\nIsNull(t1.TDHSerialNo,0) as TDHSerialNo,\\nIsNull(t1.IncomeHeadCode,0) as IncomeHeadCode,\\nIsNull(t1.Quantity,0) as Quantity,\\nIsNull(t1.CostCenterCode,0) as CostCenterCode,\\nIsNull(t1.MenuHeadCode,0) as MenuHeadCode,\\nIsNull(t1.MenuGroupCode,0) as MenuGroupCode,\\nIsNull(t1.MenuSubGroupCode,0) as MenuSubGroupCode,\\nIsNull(t1.CourseCode,0) as CourseCode,\\nIsNull(t1.FreeQuantity,0) as FreeQuantity,\\nIsNull(t1.Rate,0) as Rate,\\nIsNull(t1.OriginalRate,0) as OriginalRate,\\nIsNull(t1.BackwardRate,0) as BackwardRate,\\nIsNull(t1.Cost,0) as Cost,\\nIsNull(t1.Discount,0) as Discount,\\nIsNull(t1.DiscountType,\\'\\') as DiscountType,\\nIsNull(t1.ModifierRate,0) as ModifierRate,\\nIsNull(t1.CalcDiscount,0) as CalcDiscount,\\nIsNull(t1.DiscountAfterPromotion,0) as DiscountAfterPromotion,\\nIsNull(t1.NetAmount,0) as NetAmount,\\nIsNull(t1.TaxOnCost,0) as TaxOnCost,\\nIsNull(t1.HappyHour,0) as HappyHour,\\nIsNull(t1.RateCode,0) as RateCode,\\nIsNull(t1.SpecialRateCode,0) as SpecialRateCode,\\nIsNull(t1.ItemTotalTax,0) as ItemTotalTax,\\nIsNull(t1.VoidReasonCode,0) as VoidReasonCode,\\nIsNull(t1.VoidType,\\'\\') as VoidType,\\nIsNull(t1.CategoryCode,\\'\\') as CategoryCode,\\nCase When isnull(t2.PayCompliment,0) = 1 then 1 else 0 end as PayCompliment,\\nisnull(t2.ReservationNo,\\'\\') ReservationNo,\\nIsNull(t2.DiscountCardCode,0) DiscCardCode, \\nIsNull(t2.DiscountCardDetailsCode,0) DiscCardDetailsCode,\\nIsNull(PriceCategoryCode,\\'\\') as  PriceCategoryCode,\\nIsNull(FlavorSizeCode,\\'\\') as FlavorSizeCode,\\nIsNull(kioskcode,\\'\\') as kioskcode,\\nIsNull(t2.BillSettledShift,0) as ShiftCode\\nfrom QFile.TblBillOrderDetail t1 with(nolock)\\nleft outer join QFile.TblBillOrderHead t2 with(nolock) on t1.poscode = t2.poscode and t1.billno = t2.billno and t1.BillOrder = t2.BillOrder \\nWhere t2.billstatus = \\'S\\' and t2.billorder = \\'B\\'',\n\tformat: 'query') ~> dsbillorderdetail\ndsbillorderdetail alterRow(insertIf(true())) ~> arbillorderdetail\narbillorderdetail sink(input(\n\t\tBillOrderDetailID as integer,\n\t\tGroupId as string,\n\t\tClientId as string,\n\t\tPOSCode as string,\n\t\tPropertyCode as integer,\n\t\tRegionCode as integer,\n\t\tBrandCode as integer,\n\t\tCountryCode as integer,\n\t\tBillOrder as string,\n\t\tBillNo as string,\n\t\tBillDateTime as timestamp,\n\t\tSerialNo as integer,\n\t\tMenuItemCode as string,\n\t\tTDHCode as string,\n\t\tTDHNo as integer,\n\t\tTDHSerialNo as integer,\n\t\tIncomeHeadCode as integer,\n\t\tQuantity as decimal(38,8),\n\t\tCostCenterCode as integer,\n\t\tMenuHeadCode as integer,\n\t\tMenuGroupCode as integer,\n\t\tMenuSubGroupCode as integer,\n\t\tCourseCode as integer,\n\t\tFreeQuantity as decimal(38,8),\n\t\tRate as decimal(38,8),\n\t\tOriginalRate as decimal(38,8),\n\t\tBackwardRate as decimal(38,8),\n\t\tCost as decimal(38,8),\n\t\tDiscount as decimal(38,8),\n\t\tDiscountType as string,\n\t\tModifierRate as decimal(38,8),\n\t\tCalcDiscount as decimal(38,8),\n\t\tNetAmount as decimal(38,8),\n\t\tTaxOnCost as boolean,\n\t\tHappyHour as boolean,\n\t\tRateCode as integer,\n\t\tSpecialRateCode as integer,\n\t\tItemTotalTax as decimal(38,10),\n\t\tVoidReasonCode as integer,\n\t\tVoidType as string,\n\t\tCategoryCode as string,\n\t\tPayCompliment as integer,\n\t\tReservationNo as string,\n\t\tDiscountAfterPromotion as decimal(38,8),\n\t\tid as integer,\n\t\tDiscCardCode as integer,\n\t\tDiscCardDetailsCode as integer,\n\t\tPriceCategoryCode as string,\n\t\tFlavorSizeCode as string,\n\t\tkioskcode as integer,\n\t\tShiftCode as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tGroupId,\n\t\tClientId,\n\t\tPOSCode,\n\t\tPropertyCode,\n\t\tRegionCode,\n\t\tBrandCode,\n\t\tCountryCode,\n\t\tBillOrder,\n\t\tBillNo,\n\t\tBillDateTime,\n\t\tSerialNo,\n\t\tMenuItemCode,\n\t\tTDHCode,\n\t\tTDHNo,\n\t\tTDHSerialNo,\n\t\tIncomeHeadCode,\n\t\tQuantity,\n\t\tCostCenterCode,\n\t\tMenuHeadCode,\n\t\tMenuGroupCode,\n\t\tMenuSubGroupCode,\n\t\tCourseCode,\n\t\tFreeQuantity,\n\t\tRate,\n\t\tOriginalRate,\n\t\tBackwardRate,\n\t\tCost,\n\t\tDiscount,\n\t\tDiscountType,\n\t\tModifierRate,\n\t\tCalcDiscount,\n\t\tNetAmount,\n\t\tTaxOnCost,\n\t\tHappyHour,\n\t\tRateCode,\n\t\tSpecialRateCode,\n\t\tItemTotalTax,\n\t\tVoidReasonCode,\n\t\tVoidType,\n\t\tCategoryCode,\n\t\tPayCompliment,\n\t\tReservationNo,\n\t\tDiscountAfterPromotion,\n\t\tDiscCardCode,\n\t\tDiscCardDetailsCode,\n\t\tPriceCategoryCode,\n\t\tFlavorSizeCode,\n\t\tkioskcode,\n\t\tShiftCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DimBillOrderDetail"
		}
	}
}