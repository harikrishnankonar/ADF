{
	"name": "dfusermst",
	"properties": {
		"folder": {
			"name": "POSMaster"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dsposdata",
						"type": "DatasetReference"
					},
					"name": "dsusermst"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimUserMst_Desc",
						"type": "DatasetReference"
					},
					"name": "DimUserMst"
				}
			],
			"transformations": [
				{
					"name": "arusermst"
				}
			],
			"script": "source(output(\n\t\tGroupId as string,\n\t\tClientId as string,\n\t\tUserCode as integer,\n\t\tFullName as string,\n\t\tEmployeeCode as string,\n\t\tRoleCode as integer,\n\t\tUserShortName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'Select (Select top 1 Left(GroupId,3) as GroupId from tblinstallationdetails) as GroupId\\n, (Select top 1 Left(ClientId,3) as ClientId from tblinstallationdetails) as ClientId\\n,  UserCode, FullName, EmployeeCode, RoleCode, UserShortName from [TblUser] with(nolock)',\n\tformat: 'query') ~> dsusermst\ndsusermst alterRow(upsertIf(true())) ~> arusermst\narusermst sink(input(\n\t\tUserID as integer,\n\t\tGroupId as string,\n\t\tClientId as string,\n\t\tUserCode as integer,\n\t\tFullName as string,\n\t\tEmployeeCode as string,\n\t\tUserShortName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:true,\n\tkeys:['UserCode'],\n\tformat: 'table',\n\tmapColumn(\n\t\tGroupId,\n\t\tClientId,\n\t\tUserCode,\n\t\tFullName,\n\t\tEmployeeCode,\n\t\tUserShortName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DimUserMst"
		}
	}
}